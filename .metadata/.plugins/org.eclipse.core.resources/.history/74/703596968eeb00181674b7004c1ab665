package coreJava.Services;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import coreJava.DAO.DAO;
import coreJava.Enums.AttendingEnum;
import coreJava.Models.Attending;
import coreJava.Models.Course;
import coreJava.Models.Student;
import coreJava.Repositories.AttendingDAOI;

public class AttendingImpliment extends DAO implements AttendingDAOI {

	/**
	 * This method takes as a parameter a Student and a Course object. If the
	 * student’s GPA id greater or equal to the minimum GPA of the course then the
	 * student is allow to register to the course. If not, then throw the
	 * StudentRegistrationException with a custom massage such as “\nDid not meet
	 * the minimum GPA requirement\nRegistration Denied”. Since you are creating a
	 * new record in the database, return the primary key auto-generated by the
	 * database.
	 * 
	 * @param student
	 * @param course
	 * @return
	 */
	public int registerStudentToCourse(Student student, Course course) {
		int registered = 0;
		
		connect();
		
		try {
			ps = conn.prepareStatement(AttendingEnum.REGISTER_STUDENT_TO_COURSE.getQuery());
			
			ps.setInt(2, course.getCourse_id());
			ps.setInt(3, student.getStudent_id());
			
			rs = ps.executeQuery();
			
			registered = rs.getInt(0);
		} catch (SQLException e) {
			System.out.println("\nSorry couldn't register you to course\n");
		}
		return 0;
	}

	/**
	 * This method takes as a parameter a int student_id and would query the
	 * database for all the courses a student is register base on the Id
	 * 
	 * @param student_id
	 * @return
	 */
	public List<Attending> getStudentCourse(int student_id) {
		List<Attending> listOfStudentAttendingCourses = new ArrayList<Attending>();
		
		connect();
		
		try {
			ps = conn.prepareStatement(AttendingEnum.GET_STUDENTS_COURSES.getQuery());
			ps.setInt(1, student_id);
			rs = ps.executeQuery();
			
			while(rs.next()) {
				listOfStudentAttendingCourses.add(new Attending(rs.getString(0), rs.getString(1), rs.getString(2)));
			}
			
		} catch (SQLException e) {
			System.out.println("Sorry something went wrong");
		} finally {
			dispose();
		}
		
		return listOfStudentAttendingCourses;
	}

}
